/*
 * FILE : mozilla_wrap.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
/***********************************************************************
 * $Header: /cvsroot/wxmozilla/wxMozilla/wxPython/contrib/mozilla/mozilla_wrap.cpp,v 1.14 2005/05/17 21:19:36 vaclavslavik Exp $
 * swig_lib/python/python.cfg
 *
 * Contains variable linking and pointer type-checking code.
 ************************************************************************/

#include "Python.h"

#include <string.h>
#include <stdlib.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Definitions for Windows/Unix exporting */
#if defined(_WIN32) || defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export
#	else
#	    define SWIGEXPORT(a) a
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGSTATICRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGSTATICRUNTIME(a) static a
#endif

typedef struct {
  char  *name;
  PyObject *(*get_attr)(void);
  int (*set_attr)(PyObject *);
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar **vars;
  int      nvars;
  int      maxvars;
} swig_varlinkobject;

/* ----------------------------------------------------------------------
   swig_varlink_repr()

   Function for python repr method
   ---------------------------------------------------------------------- */

static PyObject *
swig_varlink_repr(swig_varlinkobject *v)
{
  v = v;
  return PyString_FromString("<Global variables>");
}

/* ---------------------------------------------------------------------
   swig_varlink_print()

   Print out all of the global variable names
   --------------------------------------------------------------------- */

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags)
{

  int i = 0;
  flags = flags;
  fprintf(fp,"Global variables { ");
  while (v->vars[i]) {
    fprintf(fp,"%s", v->vars[i]->name);
    i++;
    if (v->vars[i]) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

/* --------------------------------------------------------------------
   swig_varlink_getattr

   This function gets the value of a variable and returns it as a
   PyObject.   In our case, we'll be looking at the datatype and
   converting into a number or string
   -------------------------------------------------------------------- */

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n)
{
  int i = 0;
  char temp[128];

  while (v->vars[i]) {
    if (strcmp(v->vars[i]->name,n) == 0) {
      return (*v->vars[i]->get_attr)();
    }
    i++;
  }
  sprintf(temp,"C global variable %s not found.", n);
  PyErr_SetString(PyExc_NameError,temp);
  return NULL;
}

/* -------------------------------------------------------------------
   swig_varlink_setattr()

   This function sets the value of a variable.
   ------------------------------------------------------------------- */

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p)
{
  char temp[128];
  int i = 0;
  while (v->vars[i]) {
    if (strcmp(v->vars[i]->name,n) == 0) {
      return (*v->vars[i]->set_attr)(p);
    }
    i++;
  }
  sprintf(temp,"C global variable %s not found.", n);
  PyErr_SetString(PyExc_NameError,temp);
  return 1;
}

statichere PyTypeObject varlinktype = {
/*  PyObject_HEAD_INIT(&PyType_Type)  Note : This doesn't work on some machines */
  PyObject_HEAD_INIT(0)
  0,
  "varlink",                          /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */

SWIGSTATICRUNTIME(PyObject *)
SWIG_newvarlink(void)
{
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  /*  _Py_NewReference(result);  Does not seem to be necessary */
  result->nvars = 0;
  result->maxvars = 64;
  result->vars = (swig_globalvar **) malloc(64*sizeof(swig_globalvar *));
  result->vars[0] = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGSTATICRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p))
{
  swig_varlinkobject *v;
  v= (swig_varlinkobject *) p;

  if (v->nvars >= v->maxvars -1) {
    v->maxvars = 2*v->maxvars;
    v->vars = (swig_globalvar **) realloc(v->vars,v->maxvars*sizeof(swig_globalvar *));
    if (v->vars == NULL) {
      fprintf(stderr,"SWIG : Fatal error in initializing Python module.\n");
      exit(1);
    }
  }
  v->vars[v->nvars] = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  v->vars[v->nvars]->name = (char *) malloc(strlen(name)+1);
  strcpy(v->vars[v->nvars]->name,name);
  v->vars[v->nvars]->get_attr = get_attr;
  v->vars[v->nvars]->set_attr = set_attr;
  v->nvars++;
  v->vars[v->nvars] = 0;
}

/* -----------------------------------------------------------------------------
 * Pointer type-checking
 * ----------------------------------------------------------------------------- */

/* SWIG pointer structure */
typedef struct SwigPtrType {
  char               *name;               /* Datatype name                  */
  int                 len;                /* Length (used for optimization) */
  void               *(*cast)(void *);    /* Pointer casting function       */
  struct SwigPtrType *next;               /* Linked list pointer            */
} SwigPtrType;

/* Pointer cache structure */
typedef struct {
  int                 stat;               /* Status (valid) bit             */
  SwigPtrType        *tp;                 /* Pointer to type structure      */
  char                name[256];          /* Given datatype name            */
  char                mapped[256];        /* Equivalent name                */
} SwigCacheType;

static int SwigPtrMax  = 64;           /* Max entries that can be currently held */
static int SwigPtrN    = 0;            /* Current number of entries              */
static int SwigPtrSort = 0;            /* Status flag indicating sort            */
static int SwigStart[256];             /* Starting positions of types            */
static SwigPtrType *SwigPtrTable = 0;  /* Table containing pointer equivalences  */

/* Cached values */
#define SWIG_CACHESIZE  8
#define SWIG_CACHEMASK  0x7
static SwigCacheType SwigCache[SWIG_CACHESIZE];
static int SwigCacheIndex = 0;
static int SwigLastCache = 0;

/* Sort comparison function */
static int swigsort(const void *data1, const void *data2) {
	SwigPtrType *d1 = (SwigPtrType *) data1;
	SwigPtrType *d2 = (SwigPtrType *) data2;
	return strcmp(d1->name,d2->name);
}

/* Register a new datatype with the type-checker */
SWIGSTATICRUNTIME(void)
SWIG_RegisterMapping(char *origtype, char *newtype, void *(*cast)(void *)) {
  int i;
  SwigPtrType *t = 0,*t1;

  /* Allocate the pointer table if necessary */
  if (!SwigPtrTable) {
    SwigPtrTable = (SwigPtrType *) malloc(SwigPtrMax*sizeof(SwigPtrType));
  }

  /* Grow the table */
  if (SwigPtrN >= SwigPtrMax) {
    SwigPtrMax = 2*SwigPtrMax;
    SwigPtrTable = (SwigPtrType *) realloc((char *) SwigPtrTable,SwigPtrMax*sizeof(SwigPtrType));
  }
  for (i = 0; i < SwigPtrN; i++) {
    if (strcmp(SwigPtrTable[i].name,origtype) == 0) {
      t = &SwigPtrTable[i];
      break;
    }
  }
  if (!t) {
    t = &SwigPtrTable[SwigPtrN++];
    t->name = origtype;
    t->len = strlen(t->name);
    t->cast = 0;
    t->next = 0;
  }

  /* Check for existing entries */
  while (t->next) {
    if ((strcmp(t->name,newtype) == 0)) {
      if (cast) t->cast = cast;
      return;
    }
    t = t->next;
  }
  t1 = (SwigPtrType *) malloc(sizeof(SwigPtrType));
  t1->name = newtype;
  t1->len = strlen(t1->name);
  t1->cast = cast;
  t1->next = 0;
  t->next = t1;
  SwigPtrSort = 0;
}

/* Make a pointer value string */
SWIGSTATICRUNTIME(void)
SWIG_MakePtr(char *c, const void *ptr, char *type) {
  static char hex[17] = "0123456789abcdef";
  unsigned long p, s;
  char result[24], *r;
  r = result;
  p = (unsigned long) ptr;
  if (p > 0) {
    while (p > 0) {
      s = p & 0xf;
      *(r++) = hex[s];
      p = p >> 4;
    }
    *r = '_';
    while (r >= result)
      *(c++) = *(r--);
    strcpy (c, type);
  } else {
    strcpy (c, "NULL");
  }
}

/* Function for getting a pointer value */
SWIGSTATICRUNTIME(char *)
SWIG_GetPtr(char *c, void **ptr, char *t)
{
  unsigned long p;
  char temp_type[256], *name;
  int  i, len, start, end;
  SwigPtrType *sp,*tp;
  SwigCacheType *cache;
  register int d;

  p = 0;
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return (char *) 0;
    else c;
  }
  c++;
  /* Extract hex value from pointer */
  while (d = *c) {
    if ((d >= '0') && (d <= '9'))
      p = (p << 4) + (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      p = (p << 4) + (d - ('a'-10));
    else
      break;
    c++;
  }
  *ptr = (void *) p;
  if ((!t) || (strcmp(t,c)==0)) return (char *) 0;

  if (!SwigPtrSort) {
    qsort((void *) SwigPtrTable, SwigPtrN, sizeof(SwigPtrType), swigsort);
    for (i = 0; i < 256; i++) SwigStart[i] = SwigPtrN;
    for (i = SwigPtrN-1; i >= 0; i--) SwigStart[(int) (SwigPtrTable[i].name[1])] = i;
    for (i = 255; i >= 1; i--) {
      if (SwigStart[i-1] > SwigStart[i])
	SwigStart[i-1] = SwigStart[i];
    }
    SwigPtrSort = 1;
    for (i = 0; i < SWIG_CACHESIZE; i++) SwigCache[i].stat = 0;
  }
  /* First check cache for matches.  Uses last cache value as starting point */
  cache = &SwigCache[SwigLastCache];
  for (i = 0; i < SWIG_CACHESIZE; i++) {
    if (cache->stat && (strcmp(t,cache->name) == 0) && (strcmp(c,cache->mapped) == 0)) {
      cache->stat++;
      if (cache->tp->cast) *ptr = (*(cache->tp->cast))(*ptr);
      return (char *) 0;
    }
    SwigLastCache = (SwigLastCache+1) & SWIG_CACHEMASK;
    if (!SwigLastCache) cache = SwigCache;
    else cache++;
  }
  /* Type mismatch.  Look through type-mapping table */
  start = SwigStart[(int) t[1]];
  end = SwigStart[(int) t[1]+1];
  sp = &SwigPtrTable[start];

  /* Try to find a match */
  while (start <= end) {
    if (strncmp(t,sp->name,sp->len) == 0) {
      name = sp->name;
      len = sp->len;
      tp = sp->next;
      /* Try to find entry for our given datatype */
      while(tp) {
	if (tp->len >= 255) {
	  return c;
	}
	strcpy(temp_type,tp->name);
	strncat(temp_type,t+len,255-tp->len);
	if (strcmp(c,temp_type) == 0) {
	  strcpy(SwigCache[SwigCacheIndex].mapped,c);
	  strcpy(SwigCache[SwigCacheIndex].name,t);
	  SwigCache[SwigCacheIndex].stat = 1;
	  SwigCache[SwigCacheIndex].tp = tp;
	  SwigCacheIndex = SwigCacheIndex & SWIG_CACHEMASK;
	  /* Get pointer value */
	  *ptr = (void *) p;
	  if (tp->cast) *ptr = (*(tp->cast))(*ptr);
	  return (char *) 0;
	}
	tp = tp->next;
      }
    }
    sp++;
    start++;
  }
  return c;
}

/* New object-based GetPointer function. This uses the Python abstract
 * object interface to automatically dereference the 'this' attribute
 * of shadow objects. */

SWIGSTATICRUNTIME(char *)
SWIG_GetPtrObj(PyObject *obj, void **ptr, char *type) {
  PyObject *sobj = obj;
  char     *str;
  if (!PyString_Check(obj)) {
    sobj = PyObject_GetAttrString(obj,"this");
    if (!sobj) return "";
  }
  str = PyString_AsString(sobj);
  return SWIG_GetPtr(str,ptr,type);
}

#ifdef __cplusplus
}
#endif


#define SWIG_init    initmozillac

#define SWIG_name    "mozillac"

#include "wxPython.h"
#include "wxMozillaBrowser.h"
#include "wxMozillaWindow.h"
#include "wxMozilla.h"
#include "pyistream.h"


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {
        target = o;
    } else if (target == Py_None) {
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);
        PyTuple_SetItem(o3, 0, o);

        o2 = target;
        target = PySequence_Concat(o2, o3);
        Py_DECREF(o2);
        Py_DECREF(o3);
    }
    return target;
}

    // Put some wx default wxChar* values into wxStrings.
    DECLARE_DEF_STRING(PanelNameStr);
#ifdef __cplusplus
extern "C" {
#endif
static void *SwigwxMozillaBrowserTowxWindow(void *ptr) {
    wxMozillaBrowser *src;
    wxWindow *dest;
    src = (wxMozillaBrowser *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxMozillaBrowserTowxEvtHandler(void *ptr) {
    wxMozillaBrowser *src;
    wxEvtHandler *dest;
    src = (wxMozillaBrowser *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxMozillaBrowserTowxObject(void *ptr) {
    wxMozillaBrowser *src;
    wxObject *dest;
    src = (wxMozillaBrowser *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxMozillaBrowser(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxMozillaBrowser(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxMozillaBrowser(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) 0;
    wxString * _arg5 = (wxString *) &wxPyPanelNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOlO:new_wxMozillaBrowser",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaBrowser. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaBrowser *)new_wxMozillaBrowser(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaBrowser_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define wxMozillaBrowser_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxMozillaBrowser_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) 0;
    wxString * _arg6 = (wxString *) &wxPyPanelNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|OOlO:wxMozillaBrowser_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_Create. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxMozillaBrowser_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxMozillaBrowser_LoadURL(_swigobj,_swigarg0)  (_swigobj->LoadURL(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_LoadURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","location", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_LoadURL",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_LoadURL. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_LoadURL(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetURL(_swigobj)  (_swigobj->GetURL())
static PyObject *_wrap_wxMozillaBrowser_GetURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GetURL",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetURL. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetURL(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_SavePage(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SavePage(_swigarg0,_swigarg1))
static PyObject *_wrap_wxMozillaBrowser_SavePage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    bool  _arg2 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    int tempbool2 = (int) TRUE;
    char *_kwnames[] = { "self","filename","saveFiles", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxMozillaBrowser_SavePage",_kwnames,&_argo0,&_obj1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SavePage. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
    _arg2 = (bool ) tempbool2;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_SavePage(_arg0,*_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_IsBusy(_swigobj)  (_swigobj->IsBusy())
static PyObject *_wrap_wxMozillaBrowser_IsBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_IsBusy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_IsBusy. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_IsBusy(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_GoBack(_swigobj)  (_swigobj->GoBack())
static PyObject *_wrap_wxMozillaBrowser_GoBack(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GoBack",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GoBack. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_GoBack(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_CanGoBack(_swigobj)  (_swigobj->CanGoBack())
static PyObject *_wrap_wxMozillaBrowser_CanGoBack(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_CanGoBack",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_CanGoBack. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_CanGoBack(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_GoForward(_swigobj)  (_swigobj->GoForward())
static PyObject *_wrap_wxMozillaBrowser_GoForward(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GoForward",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GoForward. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_GoForward(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_CanGoForward(_swigobj)  (_swigobj->CanGoForward())
static PyObject *_wrap_wxMozillaBrowser_CanGoForward(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_CanGoForward",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_CanGoForward. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_CanGoForward(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_Stop(_swigobj)  (_swigobj->Stop())
static PyObject *_wrap_wxMozillaBrowser_Stop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_Stop",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_Stop. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_Stop(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_Reload(_swigobj)  (_swigobj->Reload())
static PyObject *_wrap_wxMozillaBrowser_Reload(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_Reload",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_Reload. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_Reload(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_Find(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->Find(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_wxMozillaBrowser_Find(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    bool  _arg2 = (bool ) FALSE;
    bool  _arg3 = (bool ) FALSE;
    bool  _arg4 = (bool ) TRUE;
    bool  _arg5 = (bool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    int tempbool2 = (int) FALSE;
    int tempbool3 = (int) FALSE;
    int tempbool4 = (int) TRUE;
    int tempbool5 = (int) FALSE;
    char *_kwnames[] = { "self","searchString","matchCase","matchWholeWord","wrapAround","searchBackwards", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiii:wxMozillaBrowser_Find",_kwnames,&_argo0,&_obj1,&tempbool2,&tempbool3,&tempbool4,&tempbool5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_Find. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
    _arg2 = (bool ) tempbool2;
    _arg3 = (bool ) tempbool3;
    _arg4 = (bool ) tempbool4;
    _arg5 = (bool ) tempbool5;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_Find(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_FindNext(_swigobj)  (_swigobj->FindNext())
static PyObject *_wrap_wxMozillaBrowser_FindNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_FindNext",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_FindNext. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_FindNext(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_GetStatus(_swigobj)  (_swigobj->GetStatus())
static PyObject *_wrap_wxMozillaBrowser_GetStatus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GetStatus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetStatus. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetStatus(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetSelection(_swigobj)  (_swigobj->GetSelection())
static PyObject *_wrap_wxMozillaBrowser_GetSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GetSelection",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetSelection. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetSelection(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_Copy(_swigobj)  (_swigobj->Copy())
static PyObject *_wrap_wxMozillaBrowser_Copy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_Copy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_Copy. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_Copy(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaBrowser_SelectAll(_swigobj)  (_swigobj->SelectAll())
static PyObject *_wrap_wxMozillaBrowser_SelectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_SelectAll",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SelectAll. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_SelectAll(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaBrowser_SelectNone(_swigobj)  (_swigobj->SelectNone())
static PyObject *_wrap_wxMozillaBrowser_SelectNone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_SelectNone",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SelectNone. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_SelectNone(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaBrowser_MakeEditable(_swigobj,_swigarg0)  (_swigobj->MakeEditable(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_MakeEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxMozillaBrowser_MakeEditable",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_MakeEditable. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_MakeEditable(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaBrowser_InsertHTML(_swigobj,_swigarg0)  (_swigobj->InsertHTML(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_InsertHTML(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","html", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_InsertHTML",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_InsertHTML. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_InsertHTML(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_IsEditable(_swigobj)  (_swigobj->IsEditable())
static PyObject *_wrap_wxMozillaBrowser_IsEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_IsEditable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_IsEditable. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_IsEditable(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaBrowser_EditCommand(_swigobj,_swigarg0,_swigarg1)  (_swigobj->EditCommand(_swigarg0,_swigarg1))
static PyObject *_wrap_wxMozillaBrowser_EditCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    wxString * _arg2 = (wxString *) &"";
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","cmdId","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|O:wxMozillaBrowser_EditCommand",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_EditCommand. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
    if (_obj2)
{
    _arg2 = wxString_in_helper(_obj2);
    if (_arg2 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_EditCommand(_arg0,*_arg1,*_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
{
    if (_obj2)
        delete _arg2;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetCommandState(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetCommandState(_swigarg0,_swigarg1))
static PyObject *_wrap_wxMozillaBrowser_GetCommandState(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    wxString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","command","state", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxMozillaBrowser_GetCommandState",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetCommandState. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    _arg2 = wxString_in_helper(_obj2);
    if (_arg2 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_GetCommandState(_arg0,*_arg1,*_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
{
    if (_obj2)
        delete _arg2;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetStateAttribute(_swigobj,_swigarg0)  (_swigobj->GetStateAttribute(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_GetStateAttribute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","command", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_GetStateAttribute",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetStateAttribute. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetStateAttribute(_arg0,*_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj1)
        delete _arg1;
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_IsElementInSelection(_swigobj,_swigarg0)  (_swigobj->IsElementInSelection(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_IsElementInSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","element", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_IsElementInSelection",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_IsElementInSelection. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_IsElementInSelection(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_SelectElement(_swigobj,_swigarg0)  (_swigobj->SelectElement(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_SelectElement(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","element", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_SelectElement",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SelectElement. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_SelectElement(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetElementAttribute(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetElementAttribute(_swigarg0,_swigarg1))
static PyObject *_wrap_wxMozillaBrowser_GetElementAttribute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    wxString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","tagName","attrName", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxMozillaBrowser_GetElementAttribute",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetElementAttribute. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    _arg2 = wxString_in_helper(_obj2);
    if (_arg2 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetElementAttribute(_arg0,*_arg1,*_arg2));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj1)
        delete _arg1;
}
{
    if (_obj2)
        delete _arg2;
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_SetElementAttribute(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetElementAttribute(_swigarg0,_swigarg1))
static PyObject *_wrap_wxMozillaBrowser_SetElementAttribute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    wxString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","attrName","attrValue", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxMozillaBrowser_SetElementAttribute",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SetElementAttribute. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    _arg2 = wxString_in_helper(_obj2);
    if (_arg2 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBrowser_SetElementAttribute(_arg0,*_arg1,*_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
{
    if (_obj2)
        delete _arg2;
}
    return _resultobj;
}

#define wxMozillaBrowser_SetPage(_swigobj,_swigarg0)  (_swigobj->SetPage(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_SetPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","data", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBrowser_SetPage",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SetPage. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_SetPage(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBrowser_GetPage(_swigobj)  (_swigobj->GetPage())
static PyObject *_wrap_wxMozillaBrowser_GetPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBrowser * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBrowser_GetPage",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_GetPage. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBrowser_GetPage(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBrowser_SetZoom(_swigobj,_swigarg0)  (_swigobj->SetZoom(_swigarg0))
static PyObject *_wrap_wxMozillaBrowser_SetZoom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBrowser * _arg0;
    float  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","level", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Of:wxMozillaBrowser_SetZoom",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBrowser_SetZoom. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBrowser_SetZoom(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxMozillaWindowTowxFrame(void *ptr) {
    wxMozillaWindow *src;
    wxFrame *dest;
    src = (wxMozillaWindow *) ptr;
    dest = (wxFrame *) src;
    return (void *) dest;
}

static void *SwigwxMozillaWindowTowxTopLevelWindow(void *ptr) {
    wxMozillaWindow *src;
    wxTopLevelWindow *dest;
    src = (wxMozillaWindow *) ptr;
    dest = (wxTopLevelWindow *) src;
    return (void *) dest;
}

static void *SwigwxMozillaWindowTowxWindow(void *ptr) {
    wxMozillaWindow *src;
    wxWindow *dest;
    src = (wxMozillaWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxMozillaWindowTowxEvtHandler(void *ptr) {
    wxMozillaWindow *src;
    wxEvtHandler *dest;
    src = (wxMozillaWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxMozillaWindowTowxObject(void *ptr) {
    wxMozillaWindow *src;
    wxObject *dest;
    src = (wxMozillaWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxMozillaWindow(_swigarg0,_swigarg1,_swigarg2) (new wxMozillaWindow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_new_wxMozillaWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaWindow * _result;
    bool  _arg0 = (bool ) TRUE;
    bool  _arg1 = (bool ) TRUE;
    bool  _arg2 = (bool ) TRUE;
    int tempbool0 = (int) TRUE;
    int tempbool1 = (int) TRUE;
    int tempbool2 = (int) TRUE;
    char *_kwnames[] = { "showMenu","showToolbar","showStatusbar", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|iii:new_wxMozillaWindow",_kwnames,&tempbool0,&tempbool1,&tempbool2)) 
        return NULL;
    _arg0 = (bool ) tempbool0;
    _arg1 = (bool ) tempbool1;
    _arg2 = (bool ) tempbool2;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaWindow *)new_wxMozillaWindow(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxMozillaWindow_Mozilla_set(_swigobj,_swigval) (_swigobj->Mozilla = _swigval,_swigval)
static PyObject *_wrap_wxMozillaWindow_Mozilla_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _result;
    wxMozillaWindow * _arg0;
    wxMozillaBrowser * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","Mozilla", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaWindow_Mozilla_set",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaWindow_Mozilla_set. Expected _wxMozillaWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxMozillaBrowser_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxMozillaWindow_Mozilla_set. Expected _wxMozillaBrowser_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaBrowser *)wxMozillaWindow_Mozilla_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaBrowser_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxMozillaWindow_Mozilla_get(_swigobj) ((wxMozillaBrowser *) _swigobj->Mozilla)
static PyObject *_wrap_wxMozillaWindow_Mozilla_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBrowser * _result;
    wxMozillaWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaWindow_Mozilla_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaWindow_Mozilla_get. Expected _wxMozillaWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaBrowser *)wxMozillaWindow_Mozilla_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaBrowser_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SetProfilePath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSettings_SetProfilePath",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaSettings::SetProfilePath(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_GetProfilePath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxMozillaSettings_GetProfilePath",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaSettings::GetProfilePath());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SetMozillaPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSettings_SetMozillaPath",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSettings::SetMozillaPath(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_GetMozillaPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxMozillaSettings_GetMozillaPath",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaSettings::GetMozillaPath());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SetBoolPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _arg0;
    bool  _arg1;
    PyObject * _obj0 = 0;
    int tempbool1;
    char *_kwnames[] = { "name","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaSettings_SetBoolPref",_kwnames,&_obj0,&tempbool1)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSettings::SetBoolPref(*_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_GetBoolPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSettings_GetBoolPref",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaSettings::GetBoolPref(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SetStrPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _arg0;
    wxString * _arg1;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "name","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaSettings_SetStrPref",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSettings::SetStrPref(*_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj0)
        delete _arg0;
}
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_GetStrPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSettings_GetStrPref",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaSettings::GetStrPref(*_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj0)
        delete _arg0;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SetIntPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _arg0;
    int  _arg1;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "name","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaSettings_SetIntPref",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSettings::SetIntPref(*_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_GetIntPref(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSettings_GetIntPref",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaSettings::GetIntPref(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxMozillaSettings_SavePrefs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxMozillaSettings_SavePrefs",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSettings::SavePrefs();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxMozillaBeforeLoadEventTowxCommandEvent(void *ptr) {
    wxMozillaBeforeLoadEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaBeforeLoadEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaBeforeLoadEventTowxEvent(void *ptr) {
    wxMozillaBeforeLoadEvent *src;
    wxEvent *dest;
    src = (wxMozillaBeforeLoadEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaBeforeLoadEventTowxObject(void *ptr) {
    wxMozillaBeforeLoadEvent *src;
    wxObject *dest;
    src = (wxMozillaBeforeLoadEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaBeforeLoadEvent_GetURL(_swigobj)  (_swigobj->GetURL())
static PyObject *_wrap_wxMozillaBeforeLoadEvent_GetURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaBeforeLoadEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBeforeLoadEvent_GetURL",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBeforeLoadEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBeforeLoadEvent_GetURL. Expected _wxMozillaBeforeLoadEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaBeforeLoadEvent_GetURL(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaBeforeLoadEvent_SetURL(_swigobj,_swigarg0)  (_swigobj->SetURL(_swigarg0))
static PyObject *_wrap_wxMozillaBeforeLoadEvent_SetURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBeforeLoadEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","newURL", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaBeforeLoadEvent_SetURL",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBeforeLoadEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBeforeLoadEvent_SetURL. Expected _wxMozillaBeforeLoadEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBeforeLoadEvent_SetURL(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaBeforeLoadEvent_Cancel(_swigobj)  (_swigobj->Cancel())
static PyObject *_wrap_wxMozillaBeforeLoadEvent_Cancel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBeforeLoadEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBeforeLoadEvent_Cancel",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBeforeLoadEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBeforeLoadEvent_Cancel. Expected _wxMozillaBeforeLoadEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaBeforeLoadEvent_Cancel(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaBeforeLoadEvent_IsCancelled(_swigobj)  (_swigobj->IsCancelled())
static PyObject *_wrap_wxMozillaBeforeLoadEvent_IsCancelled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaBeforeLoadEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaBeforeLoadEvent_IsCancelled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaBeforeLoadEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaBeforeLoadEvent_IsCancelled. Expected _wxMozillaBeforeLoadEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaBeforeLoadEvent_IsCancelled(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define new_wxMozillaBeforeLoadEvent(_swigarg0) (new wxMozillaBeforeLoadEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaBeforeLoadEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaBeforeLoadEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaBeforeLoadEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaBeforeLoadEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaBeforeLoadEvent *)new_wxMozillaBeforeLoadEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaBeforeLoadEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaLinkChangedEventTowxCommandEvent(void *ptr) {
    wxMozillaLinkChangedEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaLinkChangedEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaLinkChangedEventTowxEvent(void *ptr) {
    wxMozillaLinkChangedEvent *src;
    wxEvent *dest;
    src = (wxMozillaLinkChangedEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaLinkChangedEventTowxObject(void *ptr) {
    wxMozillaLinkChangedEvent *src;
    wxObject *dest;
    src = (wxMozillaLinkChangedEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaLinkChangedEvent_GetNewURL(_swigobj)  (_swigobj->GetNewURL())
static PyObject *_wrap_wxMozillaLinkChangedEvent_GetNewURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaLinkChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaLinkChangedEvent_GetNewURL",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_GetNewURL. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaLinkChangedEvent_GetNewURL(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaLinkChangedEvent_CanGoBack(_swigobj)  (_swigobj->CanGoBack())
static PyObject *_wrap_wxMozillaLinkChangedEvent_CanGoBack(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaLinkChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaLinkChangedEvent_CanGoBack",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_CanGoBack. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaLinkChangedEvent_CanGoBack(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaLinkChangedEvent_CanGoForward(_swigobj)  (_swigobj->CanGoForward())
static PyObject *_wrap_wxMozillaLinkChangedEvent_CanGoForward(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaLinkChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaLinkChangedEvent_CanGoForward",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_CanGoForward. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaLinkChangedEvent_CanGoForward(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaLinkChangedEvent_SetNewURL(_swigobj,_swigarg0)  (_swigobj->SetNewURL(_swigarg0))
static PyObject *_wrap_wxMozillaLinkChangedEvent_SetNewURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaLinkChangedEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","newurl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaLinkChangedEvent_SetNewURL",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_SetNewURL. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaLinkChangedEvent_SetNewURL(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaLinkChangedEvent_SetCanGoBack(_swigobj,_swigarg0)  (_swigobj->SetCanGoBack(_swigarg0))
static PyObject *_wrap_wxMozillaLinkChangedEvent_SetCanGoBack(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaLinkChangedEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","goback", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaLinkChangedEvent_SetCanGoBack",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_SetCanGoBack. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaLinkChangedEvent_SetCanGoBack(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaLinkChangedEvent_SetCanGoForward(_swigobj,_swigarg0)  (_swigobj->SetCanGoForward(_swigarg0))
static PyObject *_wrap_wxMozillaLinkChangedEvent_SetCanGoForward(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaLinkChangedEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","goforward", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaLinkChangedEvent_SetCanGoForward",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaLinkChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaLinkChangedEvent_SetCanGoForward. Expected _wxMozillaLinkChangedEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaLinkChangedEvent_SetCanGoForward(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define new_wxMozillaLinkChangedEvent(_swigarg0) (new wxMozillaLinkChangedEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaLinkChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaLinkChangedEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaLinkChangedEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaLinkChangedEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaLinkChangedEvent *)new_wxMozillaLinkChangedEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaLinkChangedEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaStateChangedEventTowxCommandEvent(void *ptr) {
    wxMozillaStateChangedEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaStateChangedEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaStateChangedEventTowxEvent(void *ptr) {
    wxMozillaStateChangedEvent *src;
    wxEvent *dest;
    src = (wxMozillaStateChangedEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaStateChangedEventTowxObject(void *ptr) {
    wxMozillaStateChangedEvent *src;
    wxObject *dest;
    src = (wxMozillaStateChangedEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaStateChangedEvent_GetState(_swigobj)  (_swigobj->GetState())
static PyObject *_wrap_wxMozillaStateChangedEvent_GetState(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaStateChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaStateChangedEvent_GetState",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStateChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStateChangedEvent_GetState. Expected _wxMozillaStateChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaStateChangedEvent_GetState(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaStateChangedEvent_SetState(_swigobj,_swigarg0)  (_swigobj->SetState(_swigarg0))
static PyObject *_wrap_wxMozillaStateChangedEvent_SetState(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStateChangedEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","state", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaStateChangedEvent_SetState",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStateChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStateChangedEvent_SetState. Expected _wxMozillaStateChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaStateChangedEvent_SetState(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaStateChangedEvent_GetURL(_swigobj)  (_swigobj->GetURL())
static PyObject *_wrap_wxMozillaStateChangedEvent_GetURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaStateChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaStateChangedEvent_GetURL",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStateChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStateChangedEvent_GetURL. Expected _wxMozillaStateChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaStateChangedEvent_GetURL(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaStateChangedEvent_SetURL(_swigobj,_swigarg0)  (_swigobj->SetURL(_swigarg0))
static PyObject *_wrap_wxMozillaStateChangedEvent_SetURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStateChangedEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","url", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaStateChangedEvent_SetURL",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStateChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStateChangedEvent_SetURL. Expected _wxMozillaStateChangedEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaStateChangedEvent_SetURL(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define new_wxMozillaStateChangedEvent(_swigarg0) (new wxMozillaStateChangedEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaStateChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStateChangedEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaStateChangedEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaStateChangedEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaStateChangedEvent *)new_wxMozillaStateChangedEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaStateChangedEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaSecurityChangedEventTowxCommandEvent(void *ptr) {
    wxMozillaSecurityChangedEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaSecurityChangedEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaSecurityChangedEventTowxEvent(void *ptr) {
    wxMozillaSecurityChangedEvent *src;
    wxEvent *dest;
    src = (wxMozillaSecurityChangedEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaSecurityChangedEventTowxObject(void *ptr) {
    wxMozillaSecurityChangedEvent *src;
    wxObject *dest;
    src = (wxMozillaSecurityChangedEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaSecurityChangedEvent_GetSecurity(_swigobj)  (_swigobj->GetSecurity())
static PyObject *_wrap_wxMozillaSecurityChangedEvent_GetSecurity(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaSecurityChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaSecurityChangedEvent_GetSecurity",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaSecurityChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaSecurityChangedEvent_GetSecurity. Expected _wxMozillaSecurityChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaSecurityChangedEvent_GetSecurity(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaSecurityChangedEvent_SetSecurity(_swigobj,_swigarg0)  (_swigobj->SetSecurity(_swigarg0))
static PyObject *_wrap_wxMozillaSecurityChangedEvent_SetSecurity(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaSecurityChangedEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","security", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaSecurityChangedEvent_SetSecurity",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaSecurityChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaSecurityChangedEvent_SetSecurity. Expected _wxMozillaSecurityChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaSecurityChangedEvent_SetSecurity(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define new_wxMozillaSecurityChangedEvent(_swigarg0) (new wxMozillaSecurityChangedEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaSecurityChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaSecurityChangedEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaSecurityChangedEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaSecurityChangedEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaSecurityChangedEvent *)new_wxMozillaSecurityChangedEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaSecurityChangedEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaLoadCompleteEventTowxCommandEvent(void *ptr) {
    wxMozillaLoadCompleteEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaLoadCompleteEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaLoadCompleteEventTowxEvent(void *ptr) {
    wxMozillaLoadCompleteEvent *src;
    wxEvent *dest;
    src = (wxMozillaLoadCompleteEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaLoadCompleteEventTowxObject(void *ptr) {
    wxMozillaLoadCompleteEvent *src;
    wxObject *dest;
    src = (wxMozillaLoadCompleteEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxMozillaLoadCompleteEvent(_swigarg0) (new wxMozillaLoadCompleteEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaLoadCompleteEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaLoadCompleteEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaLoadCompleteEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaLoadCompleteEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaLoadCompleteEvent *)new_wxMozillaLoadCompleteEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaLoadCompleteEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaStatusChangedEventTowxCommandEvent(void *ptr) {
    wxMozillaStatusChangedEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaStatusChangedEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaStatusChangedEventTowxEvent(void *ptr) {
    wxMozillaStatusChangedEvent *src;
    wxEvent *dest;
    src = (wxMozillaStatusChangedEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaStatusChangedEventTowxObject(void *ptr) {
    wxMozillaStatusChangedEvent *src;
    wxObject *dest;
    src = (wxMozillaStatusChangedEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaStatusChangedEvent_GetStatusText(_swigobj)  (_swigobj->GetStatusText())
static PyObject *_wrap_wxMozillaStatusChangedEvent_GetStatusText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaStatusChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaStatusChangedEvent_GetStatusText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStatusChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStatusChangedEvent_GetStatusText. Expected _wxMozillaStatusChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaStatusChangedEvent_GetStatusText(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaStatusChangedEvent_IsBusy(_swigobj)  (_swigobj->IsBusy())
static PyObject *_wrap_wxMozillaStatusChangedEvent_IsBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaStatusChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaStatusChangedEvent_IsBusy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStatusChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStatusChangedEvent_IsBusy. Expected _wxMozillaStatusChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaStatusChangedEvent_IsBusy(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaStatusChangedEvent_SetStatusText(_swigobj,_swigarg0)  (_swigobj->SetStatusText(_swigarg0))
static PyObject *_wrap_wxMozillaStatusChangedEvent_SetStatusText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStatusChangedEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","status", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaStatusChangedEvent_SetStatusText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStatusChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStatusChangedEvent_SetStatusText. Expected _wxMozillaStatusChangedEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaStatusChangedEvent_SetStatusText(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaStatusChangedEvent_SetBusy(_swigobj,_swigarg0)  (_swigobj->SetBusy(_swigarg0))
static PyObject *_wrap_wxMozillaStatusChangedEvent_SetBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStatusChangedEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","isbusy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaStatusChangedEvent_SetBusy",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaStatusChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaStatusChangedEvent_SetBusy. Expected _wxMozillaStatusChangedEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaStatusChangedEvent_SetBusy(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define new_wxMozillaStatusChangedEvent(_swigarg0) (new wxMozillaStatusChangedEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaStatusChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaStatusChangedEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaStatusChangedEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaStatusChangedEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaStatusChangedEvent *)new_wxMozillaStatusChangedEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaStatusChangedEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaTitleChangedEventTowxCommandEvent(void *ptr) {
    wxMozillaTitleChangedEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaTitleChangedEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaTitleChangedEventTowxEvent(void *ptr) {
    wxMozillaTitleChangedEvent *src;
    wxEvent *dest;
    src = (wxMozillaTitleChangedEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaTitleChangedEventTowxObject(void *ptr) {
    wxMozillaTitleChangedEvent *src;
    wxObject *dest;
    src = (wxMozillaTitleChangedEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaTitleChangedEvent_GetTitle(_swigobj)  (_swigobj->GetTitle())
static PyObject *_wrap_wxMozillaTitleChangedEvent_GetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaTitleChangedEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaTitleChangedEvent_GetTitle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaTitleChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaTitleChangedEvent_GetTitle. Expected _wxMozillaTitleChangedEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaTitleChangedEvent_GetTitle(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaTitleChangedEvent_SetTitle(_swigobj,_swigarg0)  (_swigobj->SetTitle(_swigarg0))
static PyObject *_wrap_wxMozillaTitleChangedEvent_SetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaTitleChangedEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","title", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaTitleChangedEvent_SetTitle",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaTitleChangedEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaTitleChangedEvent_SetTitle. Expected _wxMozillaTitleChangedEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaTitleChangedEvent_SetTitle(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define new_wxMozillaTitleChangedEvent(_swigarg0) (new wxMozillaTitleChangedEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaTitleChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaTitleChangedEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaTitleChangedEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaTitleChangedEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaTitleChangedEvent *)new_wxMozillaTitleChangedEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaTitleChangedEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaProgressEventTowxCommandEvent(void *ptr) {
    wxMozillaProgressEvent *src;
    wxCommandEvent *dest;
    src = (wxMozillaProgressEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaProgressEventTowxEvent(void *ptr) {
    wxMozillaProgressEvent *src;
    wxEvent *dest;
    src = (wxMozillaProgressEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaProgressEventTowxObject(void *ptr) {
    wxMozillaProgressEvent *src;
    wxObject *dest;
    src = (wxMozillaProgressEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaProgressEvent_GetSelfCurrentProgress(_swigobj)  (_swigobj->GetSelfCurrentProgress())
static PyObject *_wrap_wxMozillaProgressEvent_GetSelfCurrentProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaProgressEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaProgressEvent_GetSelfCurrentProgress",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_GetSelfCurrentProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaProgressEvent_GetSelfCurrentProgress(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaProgressEvent_SetSelfCurrentProgress(_swigobj,_swigarg0)  (_swigobj->SetSelfCurrentProgress(_swigarg0))
static PyObject *_wrap_wxMozillaProgressEvent_SetSelfCurrentProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaProgressEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","progress", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaProgressEvent_SetSelfCurrentProgress",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_SetSelfCurrentProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaProgressEvent_SetSelfCurrentProgress(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaProgressEvent_GetSelfMaxProgress(_swigobj)  (_swigobj->GetSelfMaxProgress())
static PyObject *_wrap_wxMozillaProgressEvent_GetSelfMaxProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaProgressEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaProgressEvent_GetSelfMaxProgress",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_GetSelfMaxProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaProgressEvent_GetSelfMaxProgress(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaProgressEvent_SetSelfMaxProgress(_swigobj,_swigarg0)  (_swigobj->SetSelfMaxProgress(_swigarg0))
static PyObject *_wrap_wxMozillaProgressEvent_SetSelfMaxProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaProgressEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","progress", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaProgressEvent_SetSelfMaxProgress",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_SetSelfMaxProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaProgressEvent_SetSelfMaxProgress(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaProgressEvent_GetTotalCurrentProgress(_swigobj)  (_swigobj->GetTotalCurrentProgress())
static PyObject *_wrap_wxMozillaProgressEvent_GetTotalCurrentProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaProgressEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaProgressEvent_GetTotalCurrentProgress",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_GetTotalCurrentProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaProgressEvent_GetTotalCurrentProgress(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaProgressEvent_SetTotalCurrentProgress(_swigobj,_swigarg0)  (_swigobj->SetTotalCurrentProgress(_swigarg0))
static PyObject *_wrap_wxMozillaProgressEvent_SetTotalCurrentProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaProgressEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","progress", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaProgressEvent_SetTotalCurrentProgress",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_SetTotalCurrentProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaProgressEvent_SetTotalCurrentProgress(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaProgressEvent_GetTotalMaxProgress(_swigobj)  (_swigobj->GetTotalMaxProgress())
static PyObject *_wrap_wxMozillaProgressEvent_GetTotalMaxProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaProgressEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaProgressEvent_GetTotalMaxProgress",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_GetTotalMaxProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaProgressEvent_GetTotalMaxProgress(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaProgressEvent_SetTotalMaxProgress(_swigobj,_swigarg0)  (_swigobj->SetTotalMaxProgress(_swigarg0))
static PyObject *_wrap_wxMozillaProgressEvent_SetTotalMaxProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaProgressEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","progress", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaProgressEvent_SetTotalMaxProgress",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaProgressEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaProgressEvent_SetTotalMaxProgress. Expected _wxMozillaProgressEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaProgressEvent_SetTotalMaxProgress(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define new_wxMozillaProgressEvent(_swigarg0) (new wxMozillaProgressEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaProgressEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaProgressEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaProgressEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaProgressEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaProgressEvent *)new_wxMozillaProgressEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaProgressEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigwxMozillaRightClickEventTowxMouseEvent(void *ptr) {
    wxMozillaRightClickEvent *src;
    wxMouseEvent *dest;
    src = (wxMozillaRightClickEvent *) ptr;
    dest = (wxMouseEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaRightClickEventTowxEvent(void *ptr) {
    wxMozillaRightClickEvent *src;
    wxEvent *dest;
    src = (wxMozillaRightClickEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxMozillaRightClickEventTowxObject(void *ptr) {
    wxMozillaRightClickEvent *src;
    wxObject *dest;
    src = (wxMozillaRightClickEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxMozillaRightClickEvent_IsBusy(_swigobj)  (_swigobj->IsBusy())
static PyObject *_wrap_wxMozillaRightClickEvent_IsBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_IsBusy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_IsBusy. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMozillaRightClickEvent_IsBusy(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetBusy(_swigobj,_swigarg0)  (_swigobj->SetBusy(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","isbusy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_SetBusy",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetBusy. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetBusy(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxMozillaRightClickEvent_GetBackgroundImageSrc(_swigobj)  (_swigobj->GetBackgroundImageSrc())
static PyObject *_wrap_wxMozillaRightClickEvent_GetBackgroundImageSrc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_GetBackgroundImageSrc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_GetBackgroundImageSrc. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaRightClickEvent_GetBackgroundImageSrc(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetBackgroundImageSrc(_swigobj,_swigarg0)  (_swigobj->SetBackgroundImageSrc(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetBackgroundImageSrc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaRightClickEvent_SetBackgroundImageSrc",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetBackgroundImageSrc. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetBackgroundImageSrc(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_GetText(_swigobj)  (_swigobj->GetText())
static PyObject *_wrap_wxMozillaRightClickEvent_GetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_GetText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_GetText. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaRightClickEvent_GetText(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetText(_swigobj,_swigarg0)  (_swigobj->SetText(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaRightClickEvent_SetText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetText. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetText(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_GetImageSrc(_swigobj)  (_swigobj->GetImageSrc())
static PyObject *_wrap_wxMozillaRightClickEvent_GetImageSrc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_GetImageSrc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_GetImageSrc. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaRightClickEvent_GetImageSrc(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetImageSrc(_swigobj,_swigarg0)  (_swigobj->SetImageSrc(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetImageSrc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","src", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaRightClickEvent_SetImageSrc",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetImageSrc. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetImageSrc(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_GetLink(_swigobj)  (_swigobj->GetLink())
static PyObject *_wrap_wxMozillaRightClickEvent_GetLink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_GetLink",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_GetLink. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxMozillaRightClickEvent_GetLink(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromWideChar(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetLink(_swigobj,_swigarg0)  (_swigobj->SetLink(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetLink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","link", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxMozillaRightClickEvent_SetLink",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetLink. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetLink(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxMozillaRightClickEvent_GetContext(_swigobj)  (_swigobj->GetContext())
static PyObject *_wrap_wxMozillaRightClickEvent_GetContext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_GetContext",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_GetContext. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMozillaRightClickEvent_GetContext(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMozillaRightClickEvent_SetContext(_swigobj,_swigarg0)  (_swigobj->SetContext(_swigarg0))
static PyObject *_wrap_wxMozillaRightClickEvent_SetContext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","context", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_SetContext",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_SetContext. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxMozillaRightClickEvent_SetContext(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define new_wxMozillaRightClickEvent(_swigarg0) (new wxMozillaRightClickEvent(_swigarg0))
static PyObject *_wrap_new_wxMozillaRightClickEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxMozillaRightClickEvent * _result;
    wxWindow * _arg0 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "win", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:new_wxMozillaRightClickEvent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxMozillaRightClickEvent. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxMozillaRightClickEvent *)new_wxMozillaRightClickEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxMozillaRightClickEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxMouseEvent_m_x_set(_swigobj,_swigval) (_swigobj->m_x = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxMozillaRightClickEvent * _arg0;
    long  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","m_x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxMozillaRightClickEvent_m_x_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_x_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxMouseEvent_m_x_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxMouseEvent_m_x_get(_swigobj) ((long ) _swigobj->m_x)
static PyObject *_wrap_wxMozillaRightClickEvent_m_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_x_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_x_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxMouseEvent_m_x_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxMouseEvent_m_y_set(_swigobj,_swigval) (_swigobj->m_y = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxMozillaRightClickEvent * _arg0;
    long  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","m_y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxMozillaRightClickEvent_m_y_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_y_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxMouseEvent_m_y_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxMouseEvent_m_y_get(_swigobj) ((long ) _swigobj->m_y)
static PyObject *_wrap_wxMozillaRightClickEvent_m_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_y_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_y_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxMouseEvent_m_y_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxMouseEvent_m_leftDown_set(_swigobj,_swigval) (_swigobj->m_leftDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_leftDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_leftDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_leftDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_leftDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_leftDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_leftDown_get(_swigobj) ((bool ) _swigobj->m_leftDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_leftDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_leftDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_leftDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_leftDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_middleDown_set(_swigobj,_swigval) (_swigobj->m_middleDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_middleDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_middleDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_middleDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_middleDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_middleDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_middleDown_get(_swigobj) ((bool ) _swigobj->m_middleDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_middleDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_middleDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_middleDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_middleDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_rightDown_set(_swigobj,_swigval) (_swigobj->m_rightDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_rightDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_rightDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_rightDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_rightDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_rightDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_rightDown_get(_swigobj) ((bool ) _swigobj->m_rightDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_rightDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_rightDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_rightDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_rightDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_controlDown_set(_swigobj,_swigval) (_swigobj->m_controlDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_controlDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_controlDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_controlDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_controlDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_controlDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_controlDown_get(_swigobj) ((bool ) _swigobj->m_controlDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_controlDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_controlDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_controlDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_controlDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_shiftDown_set(_swigobj,_swigval) (_swigobj->m_shiftDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_shiftDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_shiftDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_shiftDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_shiftDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_shiftDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_shiftDown_get(_swigobj) ((bool ) _swigobj->m_shiftDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_shiftDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_shiftDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_shiftDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_shiftDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_altDown_set(_swigobj,_swigval) (_swigobj->m_altDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_altDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_altDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_altDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_altDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_altDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_altDown_get(_swigobj) ((bool ) _swigobj->m_altDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_altDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_altDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_altDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_altDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_metaDown_set(_swigobj,_swigval) (_swigobj->m_metaDown = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_metaDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","m_metaDown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_metaDown_set",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_metaDown_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_metaDown_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_metaDown_get(_swigobj) ((bool ) _swigobj->m_metaDown)
static PyObject *_wrap_wxMozillaRightClickEvent_m_metaDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_metaDown_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_metaDown_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxMouseEvent_m_metaDown_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_wheelRotation_set(_swigobj,_swigval) (_swigobj->m_wheelRotation = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_wheelRotation_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","m_wheelRotation", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_wheelRotation_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_wheelRotation_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_wheelRotation_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_wheelRotation_get(_swigobj) ((int ) _swigobj->m_wheelRotation)
static PyObject *_wrap_wxMozillaRightClickEvent_m_wheelRotation_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_wheelRotation_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_wheelRotation_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_wheelRotation_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_wheelDelta_set(_swigobj,_swigval) (_swigobj->m_wheelDelta = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_wheelDelta_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","m_wheelDelta", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_wheelDelta_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_wheelDelta_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_wheelDelta_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_wheelDelta_get(_swigobj) ((int ) _swigobj->m_wheelDelta)
static PyObject *_wrap_wxMozillaRightClickEvent_m_wheelDelta_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_wheelDelta_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_wheelDelta_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_wheelDelta_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_linesPerAction_set(_swigobj,_swigval) (_swigobj->m_linesPerAction = _swigval,_swigval)
static PyObject *_wrap_wxMozillaRightClickEvent_m_linesPerAction_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","m_linesPerAction", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxMozillaRightClickEvent_m_linesPerAction_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_linesPerAction_set. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_linesPerAction_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxMouseEvent_m_linesPerAction_get(_swigobj) ((int ) _swigobj->m_linesPerAction)
static PyObject *_wrap_wxMozillaRightClickEvent_m_linesPerAction_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxMozillaRightClickEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxMozillaRightClickEvent_m_linesPerAction_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxMozillaRightClickEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxMozillaRightClickEvent_m_linesPerAction_get. Expected _wxMozillaRightClickEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxMouseEvent_m_linesPerAction_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}


static PyMethodDef mozillacMethods[] = {
	 { "wxMozillaRightClickEvent_m_linesPerAction_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_linesPerAction_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_linesPerAction_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_linesPerAction_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_wheelDelta_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_wheelDelta_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_wheelDelta_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_wheelDelta_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_wheelRotation_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_wheelRotation_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_wheelRotation_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_wheelRotation_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_metaDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_metaDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_metaDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_metaDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_altDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_altDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_altDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_altDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_shiftDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_shiftDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_shiftDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_shiftDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_controlDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_controlDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_controlDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_controlDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_rightDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_rightDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_rightDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_rightDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_middleDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_middleDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_middleDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_middleDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_leftDown_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_leftDown_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_leftDown_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_leftDown_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_y_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_y_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_x_get", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_m_x_set", (PyCFunction) _wrap_wxMozillaRightClickEvent_m_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaRightClickEvent", (PyCFunction) _wrap_new_wxMozillaRightClickEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetContext", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetContext, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_GetContext", (PyCFunction) _wrap_wxMozillaRightClickEvent_GetContext, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetLink", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetLink, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_GetLink", (PyCFunction) _wrap_wxMozillaRightClickEvent_GetLink, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetImageSrc", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetImageSrc, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_GetImageSrc", (PyCFunction) _wrap_wxMozillaRightClickEvent_GetImageSrc, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetText", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetText, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_GetText", (PyCFunction) _wrap_wxMozillaRightClickEvent_GetText, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetBackgroundImageSrc", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetBackgroundImageSrc, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_GetBackgroundImageSrc", (PyCFunction) _wrap_wxMozillaRightClickEvent_GetBackgroundImageSrc, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_SetBusy", (PyCFunction) _wrap_wxMozillaRightClickEvent_SetBusy, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaRightClickEvent_IsBusy", (PyCFunction) _wrap_wxMozillaRightClickEvent_IsBusy, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaProgressEvent", (PyCFunction) _wrap_new_wxMozillaProgressEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_SetTotalMaxProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_SetTotalMaxProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_GetTotalMaxProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_GetTotalMaxProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_SetTotalCurrentProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_SetTotalCurrentProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_GetTotalCurrentProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_GetTotalCurrentProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_SetSelfMaxProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_SetSelfMaxProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_GetSelfMaxProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_GetSelfMaxProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_SetSelfCurrentProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_SetSelfCurrentProgress, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaProgressEvent_GetSelfCurrentProgress", (PyCFunction) _wrap_wxMozillaProgressEvent_GetSelfCurrentProgress, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaTitleChangedEvent", (PyCFunction) _wrap_new_wxMozillaTitleChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaTitleChangedEvent_SetTitle", (PyCFunction) _wrap_wxMozillaTitleChangedEvent_SetTitle, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaTitleChangedEvent_GetTitle", (PyCFunction) _wrap_wxMozillaTitleChangedEvent_GetTitle, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaStatusChangedEvent", (PyCFunction) _wrap_new_wxMozillaStatusChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStatusChangedEvent_SetBusy", (PyCFunction) _wrap_wxMozillaStatusChangedEvent_SetBusy, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStatusChangedEvent_SetStatusText", (PyCFunction) _wrap_wxMozillaStatusChangedEvent_SetStatusText, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStatusChangedEvent_IsBusy", (PyCFunction) _wrap_wxMozillaStatusChangedEvent_IsBusy, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStatusChangedEvent_GetStatusText", (PyCFunction) _wrap_wxMozillaStatusChangedEvent_GetStatusText, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaLoadCompleteEvent", (PyCFunction) _wrap_new_wxMozillaLoadCompleteEvent, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaSecurityChangedEvent", (PyCFunction) _wrap_new_wxMozillaSecurityChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSecurityChangedEvent_SetSecurity", (PyCFunction) _wrap_wxMozillaSecurityChangedEvent_SetSecurity, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSecurityChangedEvent_GetSecurity", (PyCFunction) _wrap_wxMozillaSecurityChangedEvent_GetSecurity, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaStateChangedEvent", (PyCFunction) _wrap_new_wxMozillaStateChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStateChangedEvent_SetURL", (PyCFunction) _wrap_wxMozillaStateChangedEvent_SetURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStateChangedEvent_GetURL", (PyCFunction) _wrap_wxMozillaStateChangedEvent_GetURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStateChangedEvent_SetState", (PyCFunction) _wrap_wxMozillaStateChangedEvent_SetState, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaStateChangedEvent_GetState", (PyCFunction) _wrap_wxMozillaStateChangedEvent_GetState, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaLinkChangedEvent", (PyCFunction) _wrap_new_wxMozillaLinkChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_SetCanGoForward", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_SetCanGoForward, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_SetCanGoBack", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_SetCanGoBack, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_SetNewURL", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_SetNewURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_CanGoForward", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_CanGoForward, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_CanGoBack", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_CanGoBack, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaLinkChangedEvent_GetNewURL", (PyCFunction) _wrap_wxMozillaLinkChangedEvent_GetNewURL, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaBeforeLoadEvent", (PyCFunction) _wrap_new_wxMozillaBeforeLoadEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBeforeLoadEvent_IsCancelled", (PyCFunction) _wrap_wxMozillaBeforeLoadEvent_IsCancelled, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBeforeLoadEvent_Cancel", (PyCFunction) _wrap_wxMozillaBeforeLoadEvent_Cancel, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBeforeLoadEvent_SetURL", (PyCFunction) _wrap_wxMozillaBeforeLoadEvent_SetURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBeforeLoadEvent_GetURL", (PyCFunction) _wrap_wxMozillaBeforeLoadEvent_GetURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SavePrefs", (PyCFunction) _wrap_wxMozillaSettings_SavePrefs, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_GetIntPref", (PyCFunction) _wrap_wxMozillaSettings_GetIntPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SetIntPref", (PyCFunction) _wrap_wxMozillaSettings_SetIntPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_GetStrPref", (PyCFunction) _wrap_wxMozillaSettings_GetStrPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SetStrPref", (PyCFunction) _wrap_wxMozillaSettings_SetStrPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_GetBoolPref", (PyCFunction) _wrap_wxMozillaSettings_GetBoolPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SetBoolPref", (PyCFunction) _wrap_wxMozillaSettings_SetBoolPref, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_GetMozillaPath", (PyCFunction) _wrap_wxMozillaSettings_GetMozillaPath, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SetMozillaPath", (PyCFunction) _wrap_wxMozillaSettings_SetMozillaPath, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_GetProfilePath", (PyCFunction) _wrap_wxMozillaSettings_GetProfilePath, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaSettings_SetProfilePath", (PyCFunction) _wrap_wxMozillaSettings_SetProfilePath, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaWindow_Mozilla_get", (PyCFunction) _wrap_wxMozillaWindow_Mozilla_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaWindow_Mozilla_set", (PyCFunction) _wrap_wxMozillaWindow_Mozilla_set, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaWindow", (PyCFunction) _wrap_new_wxMozillaWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SetZoom", (PyCFunction) _wrap_wxMozillaBrowser_SetZoom, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetPage", (PyCFunction) _wrap_wxMozillaBrowser_GetPage, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SetPage", (PyCFunction) _wrap_wxMozillaBrowser_SetPage, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SetElementAttribute", (PyCFunction) _wrap_wxMozillaBrowser_SetElementAttribute, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetElementAttribute", (PyCFunction) _wrap_wxMozillaBrowser_GetElementAttribute, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SelectElement", (PyCFunction) _wrap_wxMozillaBrowser_SelectElement, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_IsElementInSelection", (PyCFunction) _wrap_wxMozillaBrowser_IsElementInSelection, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetStateAttribute", (PyCFunction) _wrap_wxMozillaBrowser_GetStateAttribute, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetCommandState", (PyCFunction) _wrap_wxMozillaBrowser_GetCommandState, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_EditCommand", (PyCFunction) _wrap_wxMozillaBrowser_EditCommand, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_IsEditable", (PyCFunction) _wrap_wxMozillaBrowser_IsEditable, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_InsertHTML", (PyCFunction) _wrap_wxMozillaBrowser_InsertHTML, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_MakeEditable", (PyCFunction) _wrap_wxMozillaBrowser_MakeEditable, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SelectNone", (PyCFunction) _wrap_wxMozillaBrowser_SelectNone, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SelectAll", (PyCFunction) _wrap_wxMozillaBrowser_SelectAll, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_Copy", (PyCFunction) _wrap_wxMozillaBrowser_Copy, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetSelection", (PyCFunction) _wrap_wxMozillaBrowser_GetSelection, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetStatus", (PyCFunction) _wrap_wxMozillaBrowser_GetStatus, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_FindNext", (PyCFunction) _wrap_wxMozillaBrowser_FindNext, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_Find", (PyCFunction) _wrap_wxMozillaBrowser_Find, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_Reload", (PyCFunction) _wrap_wxMozillaBrowser_Reload, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_Stop", (PyCFunction) _wrap_wxMozillaBrowser_Stop, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_CanGoForward", (PyCFunction) _wrap_wxMozillaBrowser_CanGoForward, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GoForward", (PyCFunction) _wrap_wxMozillaBrowser_GoForward, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_CanGoBack", (PyCFunction) _wrap_wxMozillaBrowser_CanGoBack, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GoBack", (PyCFunction) _wrap_wxMozillaBrowser_GoBack, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_IsBusy", (PyCFunction) _wrap_wxMozillaBrowser_IsBusy, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_SavePage", (PyCFunction) _wrap_wxMozillaBrowser_SavePage, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_GetURL", (PyCFunction) _wrap_wxMozillaBrowser_GetURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_LoadURL", (PyCFunction) _wrap_wxMozillaBrowser_LoadURL, METH_VARARGS | METH_KEYWORDS },
	 { "wxMozillaBrowser_Create", (PyCFunction) _wrap_wxMozillaBrowser_Create, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxMozillaBrowser", (PyCFunction) _wrap_new_wxMozillaBrowser, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_wxEvent","_wxMozillaRightClickEvent",SwigwxMozillaRightClickEventTowxEvent},
    { "_wxEvent","_wxMozillaProgressEvent",SwigwxMozillaProgressEventTowxEvent},
    { "_wxEvent","_wxMozillaTitleChangedEvent",SwigwxMozillaTitleChangedEventTowxEvent},
    { "_wxEvent","_wxMozillaStatusChangedEvent",SwigwxMozillaStatusChangedEventTowxEvent},
    { "_wxEvent","_wxMozillaLoadCompleteEvent",SwigwxMozillaLoadCompleteEventTowxEvent},
    { "_wxEvent","_wxMozillaSecurityChangedEvent",SwigwxMozillaSecurityChangedEventTowxEvent},
    { "_wxEvent","_wxMozillaStateChangedEvent",SwigwxMozillaStateChangedEventTowxEvent},
    { "_wxEvent","_wxMozillaLinkChangedEvent",SwigwxMozillaLinkChangedEventTowxEvent},
    { "_wxEvent","_wxMozillaBeforeLoadEvent",SwigwxMozillaBeforeLoadEventTowxEvent},
    { "_signed_long","_long",0},
    { "_wxPrintQuality","_wxCoord",0},
    { "_wxPrintQuality","_int",0},
    { "_wxPrintQuality","_signed_int",0},
    { "_wxPrintQuality","_unsigned_int",0},
    { "_wxPrintQuality","_wxWindowID",0},
    { "_wxPrintQuality","_uint",0},
    { "_wxPrintQuality","_EBool",0},
    { "_wxPrintQuality","_size_t",0},
    { "_wxPrintQuality","_time_t",0},
    { "_byte","_unsigned_char",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_size_t","_wxCoord",0},
    { "_size_t","_wxPrintQuality",0},
    { "_size_t","_time_t",0},
    { "_size_t","_unsigned_int",0},
    { "_size_t","_int",0},
    { "_size_t","_wxWindowID",0},
    { "_size_t","_uint",0},
    { "_wxTopLevelWindow","_wxMozillaWindow",SwigwxMozillaWindowTowxTopLevelWindow},
    { "_uint","_wxCoord",0},
    { "_uint","_wxPrintQuality",0},
    { "_uint","_time_t",0},
    { "_uint","_size_t",0},
    { "_uint","_unsigned_int",0},
    { "_uint","_int",0},
    { "_uint","_wxWindowID",0},
    { "_wxChar","_char",0},
    { "_wxCommandEvent","_wxMozillaProgressEvent",SwigwxMozillaProgressEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaTitleChangedEvent",SwigwxMozillaTitleChangedEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaStatusChangedEvent",SwigwxMozillaStatusChangedEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaLoadCompleteEvent",SwigwxMozillaLoadCompleteEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaSecurityChangedEvent",SwigwxMozillaSecurityChangedEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaStateChangedEvent",SwigwxMozillaStateChangedEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaLinkChangedEvent",SwigwxMozillaLinkChangedEventTowxCommandEvent},
    { "_wxCommandEvent","_wxMozillaBeforeLoadEvent",SwigwxMozillaBeforeLoadEventTowxCommandEvent},
    { "_char","_wxChar",0},
    { "_struct_wxNativeFontInfo","_wxNativeFontInfo",0},
    { "_EBool","_wxCoord",0},
    { "_EBool","_wxPrintQuality",0},
    { "_EBool","_signed_int",0},
    { "_EBool","_int",0},
    { "_EBool","_wxWindowID",0},
    { "_unsigned_long","_long",0},
    { "_wxNativeFontInfo","_struct_wxNativeFontInfo",0},
    { "_signed_int","_wxCoord",0},
    { "_signed_int","_wxPrintQuality",0},
    { "_signed_int","_EBool",0},
    { "_signed_int","_wxWindowID",0},
    { "_signed_int","_int",0},
    { "_WXTYPE","_wxDateTime_t",0},
    { "_WXTYPE","_short",0},
    { "_WXTYPE","_signed_short",0},
    { "_WXTYPE","_unsigned_short",0},
    { "_unsigned_short","_wxDateTime_t",0},
    { "_unsigned_short","_WXTYPE",0},
    { "_unsigned_short","_short",0},
    { "_wxMouseEvent","_wxMozillaRightClickEvent",SwigwxMozillaRightClickEventTowxMouseEvent},
    { "_wxObject","_wxMozillaRightClickEvent",SwigwxMozillaRightClickEventTowxObject},
    { "_wxObject","_wxMozillaProgressEvent",SwigwxMozillaProgressEventTowxObject},
    { "_wxObject","_wxMozillaTitleChangedEvent",SwigwxMozillaTitleChangedEventTowxObject},
    { "_wxObject","_wxMozillaStatusChangedEvent",SwigwxMozillaStatusChangedEventTowxObject},
    { "_wxObject","_wxMozillaLoadCompleteEvent",SwigwxMozillaLoadCompleteEventTowxObject},
    { "_wxObject","_wxMozillaSecurityChangedEvent",SwigwxMozillaSecurityChangedEventTowxObject},
    { "_wxObject","_wxMozillaStateChangedEvent",SwigwxMozillaStateChangedEventTowxObject},
    { "_wxObject","_wxMozillaLinkChangedEvent",SwigwxMozillaLinkChangedEventTowxObject},
    { "_wxObject","_wxMozillaBeforeLoadEvent",SwigwxMozillaBeforeLoadEventTowxObject},
    { "_wxObject","_wxMozillaWindow",SwigwxMozillaWindowTowxObject},
    { "_wxObject","_wxMozillaBrowser",SwigwxMozillaBrowserTowxObject},
    { "_signed_short","_WXTYPE",0},
    { "_signed_short","_short",0},
    { "_unsigned_char","_byte",0},
    { "_unsigned_int","_wxCoord",0},
    { "_unsigned_int","_wxPrintQuality",0},
    { "_unsigned_int","_time_t",0},
    { "_unsigned_int","_size_t",0},
    { "_unsigned_int","_uint",0},
    { "_unsigned_int","_wxWindowID",0},
    { "_unsigned_int","_int",0},
    { "_short","_wxDateTime_t",0},
    { "_short","_WXTYPE",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_wxFrame","_wxMozillaWindow",SwigwxMozillaWindowTowxFrame},
    { "_wxWindowID","_wxCoord",0},
    { "_wxWindowID","_wxPrintQuality",0},
    { "_wxWindowID","_time_t",0},
    { "_wxWindowID","_size_t",0},
    { "_wxWindowID","_EBool",0},
    { "_wxWindowID","_uint",0},
    { "_wxWindowID","_int",0},
    { "_wxWindowID","_signed_int",0},
    { "_wxWindowID","_unsigned_int",0},
    { "_int","_wxCoord",0},
    { "_int","_wxPrintQuality",0},
    { "_int","_time_t",0},
    { "_int","_size_t",0},
    { "_int","_EBool",0},
    { "_int","_uint",0},
    { "_int","_wxWindowID",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_wxDateTime_t","_unsigned_short",0},
    { "_wxDateTime_t","_short",0},
    { "_wxDateTime_t","_WXTYPE",0},
    { "_time_t","_wxCoord",0},
    { "_time_t","_wxPrintQuality",0},
    { "_time_t","_unsigned_int",0},
    { "_time_t","_int",0},
    { "_time_t","_wxWindowID",0},
    { "_time_t","_uint",0},
    { "_time_t","_size_t",0},
    { "_wxCoord","_int",0},
    { "_wxCoord","_signed_int",0},
    { "_wxCoord","_unsigned_int",0},
    { "_wxCoord","_wxWindowID",0},
    { "_wxCoord","_uint",0},
    { "_wxCoord","_EBool",0},
    { "_wxCoord","_size_t",0},
    { "_wxCoord","_time_t",0},
    { "_wxCoord","_wxPrintQuality",0},
    { "_wxEvtHandler","_wxMozillaWindow",SwigwxMozillaWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxMozillaBrowser",SwigwxMozillaBrowserTowxEvtHandler},
    { "_wxWindow","_wxMozillaWindow",SwigwxMozillaWindowTowxWindow},
    { "_wxWindow","_wxMozillaBrowser",SwigwxMozillaBrowserTowxWindow},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initmozillac() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("mozillac", mozillacMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"wxMOZ_MAJOR_VERSION", PyInt_FromLong((long) wxMOZ_MAJOR_VERSION));
	 PyDict_SetItemString(d,"wxMOZ_MINOR_VERSION", PyInt_FromLong((long) wxMOZ_MINOR_VERSION));
	 PyDict_SetItemString(d,"wxMOZ_RELEASE_NUMBER", PyInt_FromLong((long) wxMOZ_RELEASE_NUMBER));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_START", PyInt_FromLong((long) wxMOZILLA_STATE_START));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_NEGOTIATING", PyInt_FromLong((long) wxMOZILLA_STATE_NEGOTIATING));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_REDIRECTING", PyInt_FromLong((long) wxMOZILLA_STATE_REDIRECTING));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_TRANSFERRING", PyInt_FromLong((long) wxMOZILLA_STATE_TRANSFERRING));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_STOP", PyInt_FromLong((long) wxMOZILLA_STATE_STOP));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_IS_REQUEST", PyInt_FromLong((long) wxMOZILLA_STATE_IS_REQUEST));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_IS_DOCUMENT", PyInt_FromLong((long) wxMOZILLA_STATE_IS_DOCUMENT));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_IS_NETWORK", PyInt_FromLong((long) wxMOZILLA_STATE_IS_NETWORK));
	 PyDict_SetItemString(d,"wxMOZILLA_STATE_IS_WINDOW", PyInt_FromLong((long) wxMOZILLA_STATE_IS_WINDOW));
	 PyDict_SetItemString(d,"wxMOZILLA_IS_INSECURE", PyInt_FromLong((long) wxMOZILLA_IS_INSECURE));
	 PyDict_SetItemString(d,"wxMOZILLA_IS_BROKEN", PyInt_FromLong((long) wxMOZILLA_IS_BROKEN));
	 PyDict_SetItemString(d,"wxMOZILLA_IS_SECURE", PyInt_FromLong((long) wxMOZILLA_IS_SECURE));
	 PyDict_SetItemString(d,"wxMOZILLA_SECURE_HIGH", PyInt_FromLong((long) wxMOZILLA_SECURE_HIGH));
	 PyDict_SetItemString(d,"wxMOZILLA_SECURE_MED", PyInt_FromLong((long) wxMOZILLA_SECURE_MED));
	 PyDict_SetItemString(d,"wxMOZILLA_SECURE_LOW", PyInt_FromLong((long) wxMOZILLA_SECURE_LOW));
	 PyDict_SetItemString(d,"wxMOZILLA_CONTEXT_DOCUMENT", PyInt_FromLong((long) wxMOZILLA_CONTEXT_DOCUMENT));
	 PyDict_SetItemString(d,"wxMOZILLA_CONTEXT_LINK", PyInt_FromLong((long) wxMOZILLA_CONTEXT_LINK));
	 PyDict_SetItemString(d,"wxMOZILLA_CONTEXT_TEXT", PyInt_FromLong((long) wxMOZILLA_CONTEXT_TEXT));
	 PyDict_SetItemString(d,"wxMOZILLA_CONTEXT_BACKGROUND_IMAGE", PyInt_FromLong((long) wxMOZILLA_CONTEXT_BACKGROUND_IMAGE));
	 PyDict_SetItemString(d,"wxMOZILLA_CONTEXT_IMAGE", PyInt_FromLong((long) wxMOZILLA_CONTEXT_IMAGE));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_BEFORE_LOAD", PyInt_FromLong((long) wxEVT_MOZILLA_BEFORE_LOAD));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_URL_CHANGED", PyInt_FromLong((long) wxEVT_MOZILLA_URL_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_STATE_CHANGED", PyInt_FromLong((long) wxEVT_MOZILLA_STATE_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_SECURITY_CHANGED", PyInt_FromLong((long) wxEVT_MOZILLA_SECURITY_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_STATUS_CHANGED", PyInt_FromLong((long) wxEVT_MOZILLA_STATUS_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_TITLE_CHANGED", PyInt_FromLong((long) wxEVT_MOZILLA_TITLE_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_LOAD_COMPLETE", PyInt_FromLong((long) wxEVT_MOZILLA_LOAD_COMPLETE));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_PROGRESS", PyInt_FromLong((long) wxEVT_MOZILLA_PROGRESS));
	 PyDict_SetItemString(d,"wxEVT_MOZILLA_RIGHT_CLICK", PyInt_FromLong((long) wxEVT_MOZILLA_RIGHT_CLICK));


    wxClassInfo::CleanUpClasses();
    wxClassInfo::InitializeClasses();

{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}

<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded("myclass")) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_myclass.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX is available as of PHP 4.3.0, for older PHP assume 'so'.
    // It gives 'dylib' on MacOS X which is for libraries, modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'PHP_SHLIB_SUFFIX' || PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('myclass.so')) return;
    } else {
      if (!dl('myclass.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class myclass {
	static function callCallback($szCallBack) {
		callCallback($szCallBack);
	}

	static function callMemberCallback($pClassObj,$szCallBack) {
		callMemberCallback($pClassObj,$szCallBack);
	}
}

/* PHP Proxy Classes */
class Vector {
	public $_cPtr=null;

	function __set($var,$value) {
		$func = 'Vector_'.$var.'_set';
		if (function_exists($func)) call_user_func($func,$this->_cPtr,$value);
	}

	function __isset($var) {
		return function_exists('Vector_'.$var.'_set');
	}

	function __get($var) {
		$func = 'Vector_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		return null;
	}

	function __construct() {
		$this->_cPtr=new_Vector();
	}

	function magnitude2() {
		return Vector_magnitude2($this->_cPtr);
	}
}


?>
